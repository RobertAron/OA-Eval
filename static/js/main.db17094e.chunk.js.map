{"version":3,"sources":["DashCartData.ts","Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["chartData","Date","am4core","am4themes_animated","useStyles","makeStyles","theme","dashboardContainer","height","display","gap","spacing","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","cardArea","gridArea","chartArea","tableArea","padding","columnFlow","gridAutoFlow","rowFlow","minFillRow","minFillColumn","sameSizeElements","gridAutoColumns","gridAutoRows","flexArea","justifyContent","alignItems","bgWarn","backgroundColor","bgNeutral","chipLike","color","borderRadius","endContent","flexDirection","revenueTable","minHeight","overflowY","hardCodedDashData","label","value","date","MoM","DashCard","classes","Card","elevation","CardContent","className","clsx","Typography","variant","component","dateTime","toISOString","toLocaleString","undefined","year","month","Math","sign","abs","ArrowDownward","aria-label","ArrowUpward","headerLabels","rows","Array","fill","map","ele","index","id","invoice","customer","invoiceDate","revenue","costOfGoods","grossMargin","RevenueTable","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","toLocaleDateString","DashChart","title","data","useState","uuidv4","useTheme","useEffect","chart","am4charts","chartTitle","titles","create","text","fontSize","palette","primary","align","legend","position","contentAlign","labels","template","marginBottom","markers","width","strokeWidth","dateAxis","xAxes","push","dateFormats","setKey","renderer","minGridDistance","grid","cursorTooltipEnabled","valueAxis1","yAxes","min","stroke","strokeOpacity","baseGrid","numberFormatter","numberFormat","columnSeries","series","name","dataFields","valueY","dateX","yAxis","fillOpacity","columns","column","cornerRadiusTopLeft","cornerRadiusTopRight","propertyFields","tooltipText","tooltip","getFillFromObject","background","lineSeries","main","strokeDasharray","smoothing","bullet","bullets","circle","createChild","radius","cursor","lineX","lineY","zoomOutButton","chartHover","states","getKey","properties","chartDown","logo","disabled","dispose","Dashboard","appContainer","flexGrow","header","drawer","minWidth","rightContent","drawerPrimary","contrastText","AppbarActions","Search","WbSunny","Help","Person","Icon","IconButton","App","Drawer","anchor","PaperProps","Toolbar","List","ListItem","button","ListItemIcon","Home","ListItemText","selected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","dark","default","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.db17094e.chunk.js","sourcesContent":["const chartData = [{\n  \"month\": new Date(2019, 10, 1),\n  \"revenue\": 4000100,\n  \"gross margin\": 2000000\n}, {\n  \"month\": new Date(2019, 11, 1),\n  \"revenue\": 6700500,\n  \"gross margin\": 4500000\n}, {\n  \"month\": new Date(2020, 0, 1),\n  \"revenue\": 3000000,\n  \"gross margin\": 2000000\n}, {\n  \"month\": new Date(2020, 1, 1),\n  \"revenue\": 5000000,\n  \"gross margin\": 4100000\n}, {\n  \"month\": new Date(2020, 2, 1),\n  \"revenue\": 1100000,\n  \"gross margin\": 860000\n}, {\n  \"month\": new Date(2020, 3, 1),\n  \"revenue\": 7200000,\n  \"gross margin\": 5900000\n}, {\n  \"month\": new Date(2020, 4, 1),\n  \"revenue\": 4300000,\n  \"gross margin\": 2900000,\n}, {\n  \"month\": new Date(2020, 5, 1),\n  \"revenue\": 5700000,\n  \"gross margin\": 3700000,\n}, {\n  \"month\": new Date(2020, 6, 1),\n  \"revenue\": 3700000,\n  \"gross margin\": 2400000,\n}, {\n  \"month\": new Date(2020, 7, 1),\n  \"revenue\": 6100000,\n  \"gross margin\": 4100000,\n}, {\n  \"month\": new Date(2020, 8, 1),\n  \"revenue\": 5600000,\n  \"gross margin\": 3100000,\n}, {\n  \"month\": new Date(2020, 9, 1),\n  \"revenue\": 4300000,\n  \"gross margin\": 2500000,\n}];\n\nexport {\n  chartData\n}","import { CardContent, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, useTheme } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { makeStyles, Card, } from '@material-ui/core'\nimport clsx from 'clsx'\nimport { ArrowUpward, ArrowDownward } from '@material-ui/icons'\n\nimport { v4 as uuidv4 } from 'uuid'\nimport * as am4core from \"@amcharts/amcharts4/core\"\nimport * as am4charts from \"@amcharts/amcharts4/charts\"\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { chartData } from './DashCartData'\nam4core.useTheme(am4themes_animated)\n\nconst useStyles = makeStyles((theme) => ({\n  dashboardContainer: {\n    height: '100%',\n    display: 'grid',\n    gap: theme.spacing(3),\n    gridTemplateColumns: '1fr 1fr 1fr 1fr',\n    gridTemplateRows: 'max-content 1fr',\n    gridTemplateAreas: `\n      \"card  card  card  card\"\n      \"chart chart table table\"\n    `\n  },\n  cardArea: {\n    gridArea: 'card'\n  },\n  chartArea: {\n    gridArea: 'chart'\n  },\n  tableArea: {\n    gridArea: 'table',\n    padding: theme.spacing(1)\n  },\n  gridArea: {\n    gap: theme.spacing(3),\n    display: 'grid',\n    height: '100%'\n  },\n  columnFlow: {\n    gridAutoFlow: 'column'\n  },\n  rowFlow: {\n    gridAutoFlow: 'row'\n  },\n  minFillRow: {\n    gridTemplateRows: 'max-content 1fr'\n  },\n  minFillColumn: {\n    gridTemplateColumns: 'max-content 1fr'\n  },\n  sameSizeElements: {\n    gridAutoColumns: '1fr',\n    gridAutoRows: '1fr'\n  },\n  flexArea: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  bgWarn: {\n    backgroundColor: '#e66767'\n  },\n  bgNeutral: {\n    backgroundColor: '#b0b6b8'\n  },\n  chipLike: {\n    color: 'white',\n    borderRadius: 9999999\n  },\n  endContent: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  revenueTable: {\n    height: 0,\n    minHeight: '100%',\n    overflowY: 'scroll'\n  }\n}))\n\ntype DashCardData = {\n  label: string\n  value: string\n  date: Date,\n  MoM: number\n}\n\nconst hardCodedDashData: DashCardData[] = [\n  { label: 'Revenue', value: '$9,000K', date: new Date(2020, 7, 1), MoM: 21.7 },\n  { label: 'Cost of Goods', value: '$4,000K', date: new Date(2020, 7, 1), MoM: -13.1 },\n  { label: 'Gross Margin', value: '$5,000K', date: new Date(2020, 7, 1), MoM: 11.4 },\n  { label: 'Gross Margin %', value: '55.5%', date: new Date(2020, 7, 1), MoM: 14.7 }\n]\n\nconst DashCard: React.FC<DashCardData> = ({ MoM, date, label, value }) => {\n  const classes = useStyles()\n  return (\n    <Card elevation={4} key={label}>\n      <CardContent className={clsx(classes.gridArea, classes.minFillColumn)}>\n        <div>\n          <Typography variant='body1' component='h4'>{label}</Typography>\n          <Typography variant='h3' component='p'>{value}</Typography>\n          <Typography>\n            <time dateTime={date.toISOString()}>\n              {date.toLocaleString(undefined, { year: 'numeric', month: 'short' })}\n            </time>\n          </Typography>\n        </div>\n        <div className={classes.endContent}>\n          <div className={clsx(\n            classes.flexArea,\n            Math.sign(MoM) === -1 ? classes.bgWarn : classes.bgNeutral,\n            classes.chipLike\n          )}>\n            <Typography>\n              {Math.abs(MoM)}%\n            </Typography>\n            {Math.sign(MoM) === -1 ?\n              <ArrowDownward aria-label='negative' height={24} /> :\n              <ArrowUpward aria-label='positive' height={24} />\n            }\n          </div>\n          <Typography className={classes.flexArea}>MoM</Typography>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n\n\nconst headerLabels = ['Invoice #', 'Customer', 'Invoice Date', 'Revenue', 'Cost of Goods', \"Gross Margin\"]\nconst rows = new Array(100).fill(null).map((ele, index) => ({\n  id: index,\n  invoice: 12345,\n  customer: 'Customer 1',\n  invoiceDate: new Date(2020, 9, 30),\n  revenue: 6000,\n  costOfGoods: 2000,\n  grossMargin: 4000\n}))\n\nconst RevenueTable: React.FC = () => {\n  return (\n    <TableContainer>\n      <Typography variant='h5' component='h3'>Revenue Details</Typography>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {headerLabels.map((ele) => <TableCell key={ele}>{ele}</TableCell>)}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((ele) => (\n            <TableRow key={ele.id}>\n              <TableCell>{ele.invoice}</TableCell>\n              <TableCell>{ele.customer}</TableCell>\n              <TableCell>{ele.invoiceDate.toLocaleDateString(undefined)}</TableCell>\n              <TableCell>{ele.revenue}</TableCell>\n              <TableCell>{ele.costOfGoods}</TableCell>\n              <TableCell>{ele.grossMargin}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\ntype DashChartProps = {\n  title: string\n  data: any[]\n}\n\nconst DashChart: React.FC<DashChartProps> = ({ title, data }) => {\n  const [id] = useState(() => uuidv4())\n  const classes = useStyles()\n  const theme = useTheme()\n  useEffect(() => {\n\n    const chart = am4core.create(id, am4charts.XYChart)\n    chart.data = data\n\n    // title\n    const chartTitle = chart.titles.create()\n    chartTitle.text = \"Revenue & Gross Margin\";\n    chartTitle.fontSize = 18;\n    chartTitle.fill = am4core.color(theme.palette.text.primary);\n    chartTitle.align = 'left';\n\n    // legend\n    /* Add legend */\n    chart.legend = new am4charts.Legend();\n    chart.legend.position = \"top\";\n    chart.legend.contentAlign = \"right\";\n    chart.legend.fontSize = 12;\n    chart.legend.labels.template.fill = am4core.color(theme.palette.text.primary);\n    chart.legend.marginBottom = 10;\n\n    chart.legend.markers.template.width = 20\n    chart.legend.markers.template.height = 20\n    chart.legend.markers.template.strokeWidth = 0\n\n\n    /* Create date axis */\n    const dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.dateFormats.setKey(\"month\", \"MMM yyyy\");\n    dateAxis.fontSize = 14;\n    dateAxis.renderer.labels.template.fill = am4core.color(theme.palette.text.primary);\n    dateAxis.renderer.minGridDistance = 30;\n    dateAxis.renderer.grid.template.strokeWidth = 0;\n    dateAxis.cursorTooltipEnabled = false;\n\n\n    /* Create value axes */\n    const valueAxis1 = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis1.min = 0;\n    valueAxis1.fontSize = 14;\n    valueAxis1.renderer.labels.template.fill = am4core.color(theme.palette.text.primary);\n    valueAxis1.renderer.grid.template.stroke = am4core.color(\"#f5f5f5\");\n    valueAxis1.renderer.grid.template.strokeWidth = 2;\n    valueAxis1.renderer.grid.template.strokeOpacity = .8;\n    valueAxis1.renderer.baseGrid.stroke = am4core.color(\"#f5f5f5\");\n    valueAxis1.renderer.minGridDistance = 50;\n    valueAxis1.numberFormatter = new am4core.NumberFormatter();\n    valueAxis1.numberFormatter.numberFormat = \"$#,###.#.a\";\n    valueAxis1.cursorTooltipEnabled = false;\n\n\n    /* Create column series */\n    const columnSeries = chart.series.push(new am4charts.ColumnSeries());\n    columnSeries.name = \"Revenue\";\n    columnSeries.dataFields.valueY = \"revenue\";\n    columnSeries.dataFields.dateX = \"month\";\n    columnSeries.yAxis = valueAxis1;\n    columnSeries.fill = am4core.color(\"#b0b6b8\");\n    columnSeries.fillOpacity = .6;\n    columnSeries.stroke = am4core.color('#FFF');\n    columnSeries.columns.template.column.cornerRadiusTopLeft = 6;\n    columnSeries.columns.template.column.cornerRadiusTopRight = 6;\n    columnSeries.columns.template.propertyFields.fill = \"#BDC3C7\";\n    columnSeries.tooltipText = \"[#fff font-size: 14px]{name} \\n[/] [#fff font-size: 12px]{dateX.formatDate('MMM yyyy')} \\n[/]  [#fff font-size: 18px]{valueY.formatNumber('$#,###.#.a')}[/] [#fff]{additional}[/]\";\n    if (columnSeries.tooltip) {\n      columnSeries.tooltip.getFillFromObject = false;\n      columnSeries.tooltip.background.fill = am4core.color(\"#b0b6b8\");\n    }\n\n\n    /* Create line series */\n    const lineSeries = chart.series.push(new am4charts.LineSeries());\n    lineSeries.name = \"Gross Margin\";\n    lineSeries.dataFields.valueY = \"gross margin\";\n    lineSeries.dataFields.dateX = \"month\";\n    lineSeries.yAxis = valueAxis1;\n    lineSeries.stroke = am4core.color(theme.palette.primary.main);\n    lineSeries.strokeWidth = 3;\n    lineSeries.propertyFields.strokeDasharray = \"lineDash\";\n    lineSeries.smoothing = 'monotoneX'\n    lineSeries.tooltipText = \"[#fff font-size: 14px]{name} \\n[/] [#fff font-size: 12px]{dateX.formatDate('MMM yyyy')} \\n[/]  [#fff font-size: 18px]{valueY.formatNumber('$#,###.#.a')}[/] [#fff]{additional}[/]\";\n    /* Changing tooltip background fill */\n    if (lineSeries.tooltip) {\n      lineSeries.tooltip.getFillFromObject = false;\n      lineSeries.tooltip.background.fill = am4core.color(theme.palette.primary.main);\n    }\n\n    const bullet = lineSeries.bullets.push(new am4charts.Bullet());\n    bullet.fill = am4core.color(theme.palette.primary.main);\n    const circle = bullet.createChild(am4core.Circle);\n    circle.radius = 5;\n    circle.fill = am4core.color(theme.palette.primary.main);\n    circle.strokeWidth = 2.5;\n\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.lineX.strokeWidth = 0;\n    chart.cursor.lineY.strokeWidth = 0;\n\n\n    /* Zoom out button */\n    chart.zoomOutButton.background.fill = am4core.color(theme.palette.text.primary);\n    const chartHover = chart.zoomOutButton.background.states.getKey(\"hover\")\n    if (chartHover) chartHover.properties.fill = am4core.color(theme.palette.primary.main);\n    const chartDown = chart.zoomOutButton.background.states.getKey(\"down\")\n    if (chartDown) chartDown.properties.fill = am4core.color(theme.palette.primary.main);\n\n\n\n    chart.logo.disabled = true;\n    return () => {\n      chart.dispose()\n    }\n  }, [theme, data, id])\n  return <div id={id} className={classes.gridArea} />\n}\n\nfunction Dashboard() {\n  const classes = useStyles()\n  return (\n    <div className={clsx(classes.gridArea, classes.minFillRow)}>\n      <Typography variant='h3' component='h2' color='primary'>My Dashboard</Typography>\n      <div className={classes.dashboardContainer}>\n        <div className={clsx(classes.gridArea, classes.columnFlow, classes.cardArea, classes.sameSizeElements)}>\n          {hardCodedDashData.map((ele, index) => <DashCard key={index} {...ele} />)}\n        </div>\n        <div className={clsx(classes.gridArea, classes.chartArea)}>\n          <Card elevation={4}>\n            <DashChart title='Revenue & Cost of Goods' data={chartData} />\n          </Card>\n          <Card elevation={4}>\n            <DashChart title='Revenue & Cost of Goods' data={chartData} />\n          </Card>\n        </div>\n        <Card elevation={4} className={clsx(classes.gridArea, classes.tableArea, classes.minFillRow, classes.revenueTable)}>\n          <RevenueTable />\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport {\n  Dashboard\n}","import React from 'react'\nimport { Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, makeStyles, Toolbar, Typography } from '@material-ui/core'\nimport { Search, WbSunny, Help, Person, Dashboard as DashboardIcon, Home } from '@material-ui/icons'\nimport { Dashboard } from './Dashboard'\n\n\n\nconst useStyles = makeStyles(theme => ({\n  appContainer: {\n    display: 'flex',\n    minHeight: '100vh',\n    '& > div': {\n      flexGrow: 1\n    }\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  drawer: {\n    display: 'flex',\n    '& > div > div': {\n      position: 'sticky',\n      minWidth: 'max-content'\n    }\n  },\n  rightContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    gridAutoRows: 'max-content',\n    '& > main': {\n      padding: `${theme.spacing(2)}px ${theme.spacing(8)}px`,\n      flexGrow: 1\n    }\n  },\n  drawerPrimary: {\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    '& .MuiListItemIcon-root': {\n      color: theme.palette.primary.contrastText,\n    }\n  }\n}))\n\nconst AppbarActions = [Search, WbSunny, Help, Person].map((Icon, index) => (\n  <IconButton key={index}>\n    <Icon />\n  </IconButton>\n))\n\n\nfunction App() {\n  const classes = useStyles()\n  return (\n    <div className={classes.appContainer}>\n      <nav className={classes.drawer}>\n        <Drawer variant=\"permanent\" anchor=\"left\" PaperProps={{ className: classes.drawerPrimary }}>\n          <Toolbar>\n            <Typography variant='h4' component='h1'>\n              OverlayAnalytics\n            </Typography>\n          </Toolbar>\n          <List>\n            <ListItem button>\n              <ListItemIcon ><Home /></ListItemIcon>\n              <ListItemText primary='Home' />\n            </ListItem>\n            <ListItem button selected>\n              <ListItemIcon><DashboardIcon /></ListItemIcon>\n              <ListItemText primary='My Dashboard' />\n            </ListItem>\n          </List>\n        </Drawer>\n      </nav>\n      <div className={classes.rightContent}>\n        <Toolbar component='header' className={classes.header}>\n          {AppbarActions}\n        </Toolbar>\n        <main>\n          {/* Probably put some router stuff here in a real app */}\n          <Dashboard />\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {\n  createMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n} from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core'\nimport reportWebVitals from './reportWebVitals';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#10AC84',\n      dark: '#0E8E6D',\n      contrastText: '#FFFFFF'\n    },\n    text:{\n      primary:'#636E72'\n    },\n    background:{\n      default:'f3f3f3'\n    }\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}